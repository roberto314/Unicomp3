 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: dc5                                 Date: 12-16-2024, 11:09AM
Device Used: XC9572XL-10-VQ44
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
49 /72  ( 68%) 197 /360  ( 55%) 82 /216 ( 38%)   36 /72  ( 50%) 30 /34  ( 88%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1           3/18        4/54        3/90       8/ 9
FB2          17/18       27/54       60/90       9/ 9*
FB3          16/18       25/54       52/90       8/ 9
FB4          13/18       26/54       82/90       5/ 7
             -----       -----       -----      -----    
             49/72       82/216     197/360     30/34 

* - Resource is exhausted

** Global Control Resources **

Signal 'CLK8M' mapped onto global clock net GCK1.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   10          10    |  I/O              :    24      28
Output        :   15          15    |  GCK/IO           :     3       3
Bidirectional :    4           4    |  GTS/IO           :     2       2
GCK           :    1           1    |  GSR/IO           :     1       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total     30          30

** Power Data **

There are 49 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'dc5.ise'.
INFO:Cpld - Inferring BUFG constraint for signal 'CLK8M' based upon the LOC
   constraint 'P43'. It is recommended that you declare this BUFG explicitedly
   in your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
INFO:Cpld - Inferring BUFG constraint for signal 'SSO' based upon the LOC
   constraint 'P44'. It is recommended that you declare this BUFG explicitedly
   in your design. Note that for certain device families the output of a BUFG
   constraint can not drive a gated clock, and the BUFG constraint will be
   ignored.
WARNING:Cpld:1007 - Removing unused input(s) 'MOTFDC'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'nDSKCHG'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'nDSKRDY'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'nWG'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1239 - The global clock designation (BUFG) on signal 'SSO_IBUF' is
   ignored. Most likely the signal is gated and therefore cannot be used as a
   global control signal.
*************************  Summary of Mapped Logic  ************************

** 19 Outputs **

Signal              Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                Pts   Inps          No.  Type    Use     Mode Rate State
nDOE                1     3     FB1_8   42   I/O     O       STD  FAST 
nNMI                1     3     FB1_14  1    GCK/I/O O       STD  FAST 
nINT                1     4     FB1_15  2    I/O     O       STD  FAST 
D<7>                2     6     FB2_2   29   I/O     I/O     STD  FAST 
D<6>                2     6     FB2_5   30   I/O     I/O     STD  FAST 
D<5>                1     5     FB2_6   31   I/O     O       STD  FAST 
D<4>                1     5     FB2_8   32   I/O     O       STD  FAST 
D<3>                1     5     FB2_9   33   GSR/I/O O       STD  FAST 
D<2>                1     5     FB2_11  34   GTS/I/O O       STD  FAST 
D<1>                1     5     FB2_14  36   GTS/I/O I/O     STD  FAST 
D<0>                1     5     FB2_15  37   I/O     I/O     STD  FAST 
nDSEN               1     2     FB3_2   5    I/O     O       STD  FAST 
DSA                 4     7     FB3_5   6    I/O     O       STD  FAST RESET
DSB                 4     7     FB3_8   7    I/O     O       STD  FAST RESET
nSIDE1              4     7     FB3_9   8    I/O     O       STD  FAST RESET
MOTCP               3     9     FB3_11  12   I/O     O       STD  FAST RESET
nDDEN               1     1     FB3_16  18   I/O     O       STD  FAST 
HLT                 3     24    FB4_11  22   I/O     O       STD  FAST SET
FDCCLK              2     3     FB4_14  23   I/O     O       STD  FAST RESET

** 30 Buried Nodes **

Signal              Total Total Loc     Pwr  Reg Init
Name                Pts   Inps          Mode State
headload_cnt<12>    8     21    FB2_1   STD  RESET
headload_cnt<0>     2     21    FB2_3   STD  RESET
headload_cnt<2>     4     21    FB2_4   STD  RESET
headload_cnt<16>    4     21    FB2_7   STD  RESET
headload_cnt<3>     5     21    FB2_10  STD  RESET
headload_cnt<4>     6     21    FB2_12  STD  RESET
headload_cnt<14>    6     21    FB2_13  STD  RESET
headload_cnt<5>     7     21    FB2_16  STD  RESET
headload_cnt<6>     8     21    FB2_18  STD  RESET
clk_divider<0>      1     1     FB3_4   STD  RESET
s_HLDFLG            2     3     FB3_6   STD  RESET
s_CLKSTAT           2     3     FB3_7   STD  RESET
motor_cnt<4>        2     10    FB3_10  STD  RESET
clk_divider<1>      2     2     FB3_12  STD  RESET
s_DSEN              4     7     FB3_13  STD  SET
motor_cnt<3>        4     10    FB3_14  STD  RESET
motor_cnt<2>        5     10    FB3_15  STD  RESET
motor_cnt<1>        6     10    FB3_17  STD  RESET
motor_cnt<0>        7     10    FB3_18  STD  RESET
headload_cnt<9>     12    23    FB4_1   STD  RESET
headload_cnt<8>     10    21    FB4_4   STD  RESET
headload_cnt<10>    11    23    FB4_6   STD  RESET
headload_cnt<11>    9     21    FB4_7   STD  RESET
headload_cnt<7>     9     21    FB4_9   STD  RESET
headload_cnt<13>    8     23    FB4_12  STD  RESET
headload_cnt<15>    6     23    FB4_13  STD  RESET
headload_cnt<17>    4     23    FB4_15  STD  RESET
headload_cnt<18>    3     23    FB4_16  STD  RESET
headload_cnt<1>     3     21    FB4_17  STD  RESET
headload_cnt<19>    2     23    FB4_18  STD  RESET

** 11 Inputs **

Signal              Loc     Pin  Pin     Pin     
Name                        No.  Type    Use     
A3                  FB1_2   39   I/O     I
nRST                FB1_5   40   I/O     I
HLD                 FB1_6   41   I/O     I
CLK8M               FB1_9   43   GCK/I/O GCK
SSO                 FB1_11  44   GCK/I/O I
E                   FB2_17  38   I/O     I
nINTRQ              FB3_15  14   I/O     I
DRQ                 FB3_17  16   I/O     I
CLK1                FB4_8   21   I/O     I
nCE0                FB4_15  27   I/O     I
RW                  FB4_17  28   I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               4/50
Number of signals used by logic mapping into function block:  4
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB1_1         (b)     
(unused)              0       0     0   5     FB1_2   39    I/O     I
(unused)              0       0     0   5     FB1_3         (b)     
(unused)              0       0     0   5     FB1_4         (b)     
(unused)              0       0     0   5     FB1_5   40    I/O     I
(unused)              0       0     0   5     FB1_6   41    I/O     I
(unused)              0       0     0   5     FB1_7         (b)     
nDOE                  1       0     0   4     FB1_8   42    I/O     O
(unused)              0       0     0   5     FB1_9   43    GCK/I/O GCK
(unused)              0       0     0   5     FB1_10        (b)     
(unused)              0       0     0   5     FB1_11  44    GCK/I/O I
(unused)              0       0     0   5     FB1_12        (b)     
(unused)              0       0     0   5     FB1_13        (b)     
nNMI                  1       0     0   4     FB1_14  1     GCK/I/O O
nINT                  1       0     0   4     FB1_15  2     I/O     O
(unused)              0       0     0   5     FB1_16        (b)     
(unused)              0       0     0   5     FB1_17  3     I/O     
(unused)              0       0     0   5     FB1_18        (b)     

Signals Used by Logic in Function Block
  1: A3                 3: RW                 4: nCE0 
  2: E                

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
nDOE                 XX.X.................................... 3
nNMI                 X.XX.................................... 3
nINT                 XXXX.................................... 4
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               27/27
Number of signals used by logic mapping into function block:  27
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
headload_cnt<12>      8       3<-   0   0     FB2_1         (b)     (b)
D<7>                  2       0   /\3   0     FB2_2   29    I/O     I/O
headload_cnt<0>       2       0     0   3     FB2_3         (b)     (b)
headload_cnt<2>       4       0     0   1     FB2_4         (b)     (b)
D<6>                  2       0     0   3     FB2_5   30    I/O     I/O
D<5>                  1       0     0   4     FB2_6   31    I/O     O
headload_cnt<16>      4       0     0   1     FB2_7         (b)     (b)
D<4>                  1       0     0   4     FB2_8   32    I/O     O
D<3>                  1       0     0   4     FB2_9   33    GSR/I/O O
headload_cnt<3>       5       0     0   0     FB2_10        (b)     (b)
D<2>                  1       0   \/1   3     FB2_11  34    GTS/I/O O
headload_cnt<4>       6       1<-   0   0     FB2_12        (b)     (b)
headload_cnt<14>      6       1<-   0   0     FB2_13        (b)     (b)
D<1>                  1       0   /\1   3     FB2_14  36    GTS/I/O I/O
D<0>                  1       0   \/2   2     FB2_15  37    I/O     I/O
headload_cnt<5>       7       2<-   0   0     FB2_16        (b)     (b)
(unused)              0       0   \/3   2     FB2_17  38    I/O     I
headload_cnt<6>       8       3<-   0   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: A3                10: headload_cnt<14>  19: headload_cnt<4> 
  2: DRQ               11: headload_cnt<15>  20: headload_cnt<5> 
  3: E                 12: headload_cnt<16>  21: headload_cnt<6> 
  4: RW                13: headload_cnt<17>  22: headload_cnt<7> 
  5: headload_cnt<0>   14: headload_cnt<18>  23: headload_cnt<8> 
  6: headload_cnt<10>  15: headload_cnt<19>  24: headload_cnt<9> 
  7: headload_cnt<11>  16: headload_cnt<1>   25: nCE0 
  8: headload_cnt<12>  17: headload_cnt<2>   26: nINTRQ 
  9: headload_cnt<13>  18: headload_cnt<3>   27: nRST 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
headload_cnt<12>     ....XXXXXXXXXXXXXXXXXXXX..X............. 21
D<7>                 X.XX....................XXX............. 6
headload_cnt<0>      ....XXXXXXXXXXXXXXXXXXXX..X............. 21
headload_cnt<2>      ....XXXXXXXXXXXXXXXXXXXX..X............. 21
D<6>                 XXXX....................X.X............. 6
D<5>                 X.XX....................X.X............. 5
headload_cnt<16>     ....XXXXXXXXXXXXXXXXXXXX..X............. 21
D<4>                 X.XX....................X.X............. 5
D<3>                 X.XX....................X.X............. 5
headload_cnt<3>      ....XXXXXXXXXXXXXXXXXXXX..X............. 21
D<2>                 X.XX....................X.X............. 5
headload_cnt<4>      ....XXXXXXXXXXXXXXXXXXXX..X............. 21
headload_cnt<14>     ....XXXXXXXXXXXXXXXXXXXX..X............. 21
D<1>                 X.XX....................X.X............. 5
D<0>                 X.XX....................X.X............. 5
headload_cnt<5>      ....XXXXXXXXXXXXXXXXXXXX..X............. 21
headload_cnt<6>      ....XXXXXXXXXXXXXXXXXXXX..X............. 21
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               25/29
Number of signals used by logic mapping into function block:  25
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   /\2   3     FB3_1         (b)     (b)
nDSEN                 1       0     0   4     FB3_2   5     I/O     O
(unused)              0       0     0   5     FB3_3         (b)     
clk_divider<0>        1       0     0   4     FB3_4         (b)     (b)
DSA                   4       0     0   1     FB3_5   6     I/O     O
s_HLDFLG              2       0     0   3     FB3_6         (b)     (b)
s_CLKSTAT             2       0     0   3     FB3_7         (b)     (b)
DSB                   4       0     0   1     FB3_8   7     I/O     O
nSIDE1                4       0     0   1     FB3_9   8     I/O     O
motor_cnt<4>          2       0     0   3     FB3_10        (b)     (b)
MOTCP                 3       0     0   2     FB3_11  12    I/O     O
clk_divider<1>        2       0     0   3     FB3_12        (b)     (b)
s_DSEN                4       0     0   1     FB3_13        (b)     (b)
motor_cnt<3>          4       0     0   1     FB3_14  13    I/O     (b)
motor_cnt<2>          5       0     0   0     FB3_15  14    I/O     I
nDDEN                 1       0   \/1   3     FB3_16  18    I/O     O
motor_cnt<1>          6       1<-   0   0     FB3_17  16    I/O     I
motor_cnt<0>          7       2<-   0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: A3                10: D<6>.PIN          18: motor_cnt<3> 
  2: CLK1              11: D<7>.PIN          19: motor_cnt<4> 
  3: DSA               12: RW                20: nCE0 
  4: DSB               13: SSO               21: nRST 
  5: E                 14: clk_divider<0>    22: nSIDE1 
  6: HLD               15: motor_cnt<0>      23: s_CLKSTAT 
  7: MOTCP             16: motor_cnt<1>      24: s_DSEN 
  8: D<0>.PIN          17: motor_cnt<2>      25: s_HLDFLG 
  9: D<1>.PIN         

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
nDSEN                ......X................X................ 2
clk_divider<0>       ....................X................... 1
DSA                  X.X.X..X...X.......XX................... 7
s_HLDFLG             .....X..............X...X............... 3
s_CLKSTAT            .X..................X.X................. 3
DSB                  X..XX...X..X.......XX................... 7
nSIDE1               X...X....X.X.......XXX.................. 7
motor_cnt<4>         .X..X.........XXXXXXX.X................. 10
MOTCP                ....X.X.......XXXXXXX................... 9
clk_divider<1>       .............X......X................... 2
s_DSEN               X...X.....XX.......XX..X................ 7
motor_cnt<3>         .X..X.........XXXXXXX.X................. 10
motor_cnt<2>         .X..X.........XXXXXXX.X................. 10
nDDEN                ............X........................... 1
motor_cnt<1>         .X..X.........XXXXXXX.X................. 10
motor_cnt<0>         .X..X.........XXXXXXX.X................. 10
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               26/28
Number of signals used by logic mapping into function block:  26
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
headload_cnt<9>      12       7<-   0   0     FB4_1         (b)     (b)
(unused)              0       0   /\4   1     FB4_2   19    I/O     (b)
(unused)              0       0   \/5   0     FB4_3         (b)     (b)
headload_cnt<8>      10       5<-   0   0     FB4_4         (b)     (b)
(unused)              0       0   \/5   0     FB4_5   20    I/O     (b)
headload_cnt<10>     11       6<-   0   0     FB4_6         (b)     (b)
headload_cnt<11>      9       5<- /\1   0     FB4_7         (b)     (b)
(unused)              0       0   /\5   0     FB4_8   21    I/O     I
headload_cnt<7>       9       4<-   0   0     FB4_9         (b)     (b)
(unused)              0       0   /\4   1     FB4_10        (b)     (b)
HLT                   3       0   \/2   0     FB4_11  22    I/O     O
headload_cnt<13>      8       3<-   0   0     FB4_12        (b)     (b)
headload_cnt<15>      6       2<- /\1   0     FB4_13        (b)     (b)
FDCCLK                2       0   /\2   1     FB4_14  23    I/O     O
headload_cnt<17>      4       0     0   1     FB4_15  27    I/O     I
headload_cnt<18>      3       0     0   2     FB4_16        (b)     (b)
headload_cnt<1>       3       0     0   2     FB4_17  28    I/O     I
headload_cnt<19>      2       0   \/3   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: HLD               10: headload_cnt<14>  19: headload_cnt<4> 
  2: HLT               11: headload_cnt<15>  20: headload_cnt<5> 
  3: clk_divider<0>    12: headload_cnt<16>  21: headload_cnt<6> 
  4: clk_divider<1>    13: headload_cnt<17>  22: headload_cnt<7> 
  5: headload_cnt<0>   14: headload_cnt<18>  23: headload_cnt<8> 
  6: headload_cnt<10>  15: headload_cnt<19>  24: headload_cnt<9> 
  7: headload_cnt<11>  16: headload_cnt<1>   25: nRST 
  8: headload_cnt<12>  17: headload_cnt<2>   26: s_HLDFLG 
  9: headload_cnt<13>  18: headload_cnt<3>  

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
headload_cnt<9>      X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
headload_cnt<8>      ....XXXXXXXXXXXXXXXXXXXXX............... 21
headload_cnt<10>     X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
headload_cnt<11>     ....XXXXXXXXXXXXXXXXXXXXX............... 21
headload_cnt<7>      ....XXXXXXXXXXXXXXXXXXXXX............... 21
HLT                  XX..XXXXXXXXXXXXXXXXXXXXXX.............. 24
headload_cnt<13>     X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
headload_cnt<15>     X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
FDCCLK               ..XX....................X............... 3
headload_cnt<17>     X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
headload_cnt<18>     X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
headload_cnt<1>      ....XXXXXXXXXXXXXXXXXXXXX............... 21
headload_cnt<19>     X...XXXXXXXXXXXXXXXXXXXXXX.............. 23
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


D_I(0) <= '0';
D(0) <= D_I(0) when D_OE(0) = '1' else 'Z';
D_OE(0) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(1) <= '0';
D(1) <= D_I(1) when D_OE(1) = '1' else 'Z';
D_OE(1) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(2) <= '0';
D(2) <= D_I(2) when D_OE(2) = '1' else 'Z';
D_OE(2) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(3) <= '0';
D(3) <= D_I(3) when D_OE(3) = '1' else 'Z';
D_OE(3) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(4) <= '0';
D(4) <= D_I(4) when D_OE(4) = '1' else 'Z';
D_OE(4) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(5) <= '0';
D(5) <= D_I(5) when D_OE(5) = '1' else 'Z';
D_OE(5) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(6) <= DRQ;
D(6) <= D_I(6) when D_OE(6) = '1' else 'Z';
D_OE(6) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);


D_I(7) <= nINTRQ;
D(7) <= D_I(7) when D_OE(7) = '1' else 'Z';
D_OE(7) <= (nRST AND NOT A3 AND RW AND NOT nCE0 AND E);

FTCPE_DSA: FTCPE port map (DSA,DSA_T,NOT E,'0','0');
DSA_T <= ((NOT nRST AND DSA)
	OR (NOT A3 AND NOT RW AND NOT nCE0 AND DSA AND NOT D(0).PIN)
	OR (nRST AND NOT A3 AND NOT RW AND NOT nCE0 AND NOT DSA AND D(0).PIN));

FTCPE_DSB: FTCPE port map (DSB,DSB_T,NOT E,'0','0');
DSB_T <= ((NOT nRST AND DSB)
	OR (NOT A3 AND NOT RW AND NOT nCE0 AND DSB AND NOT D(1).PIN)
	OR (nRST AND NOT A3 AND NOT RW AND NOT nCE0 AND NOT DSB AND D(1).PIN));















FTCPE_FDCCLK: FTCPE port map (FDCCLK,FDCCLK_T,CLK8M,'0','0',nRST);
FDCCLK_T <= (clk_divider(0) AND clk_divider(1));

FTCPE_HLT: FTCPE port map (HLT,HLT_T,CLK8M,'0','0');
HLT_T <= ((NOT nRST AND NOT HLT)
	OR (nRST AND HLT AND HLD AND NOT s_HLDFLG)
	OR (NOT HLT AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND NOT headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_MOTCP: FTCPE port map (MOTCP,MOTCP_T,CLK8M,'0','0');
MOTCP_T <= ((MOTCP AND NOT nRST)
	OR (NOT MOTCP AND nRST AND NOT nCE0 AND E)
	OR (MOTCP AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND NOT motor_cnt(3) AND NOT motor_cnt(4)));

FTCPE_clk_divider0: FTCPE port map (clk_divider(0),'1',CLK8M,'0','0',nRST);

FTCPE_clk_divider1: FTCPE port map (clk_divider(1),clk_divider(0),CLK8M,'0','0',nRST);

FTCPE_headload_cnt0: FTCPE port map (headload_cnt(0),headload_cnt_T(0),CLK8M,'0','0');
headload_cnt_T(0) <= ((NOT nRST)
	OR (NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND NOT headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_headload_cnt1: FTCPE port map (headload_cnt(1),headload_cnt_T(1),CLK8M,'0','0');
headload_cnt_T(1) <= ((NOT nRST)
	OR (headload_cnt(0))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_headload_cnt2: FTCPE port map (headload_cnt(2),headload_cnt_T(2),CLK8M,'0','0');
headload_cnt_T(2) <= ((NOT nRST)
	OR (headload_cnt(0))
	OR (headload_cnt(1))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND 
	NOT headload_cnt(19)));

FTCPE_headload_cnt3: FTCPE port map (headload_cnt(3),headload_cnt_T(3),CLK8M,'0','0');
headload_cnt_T(3) <= ((NOT nRST)
	OR (headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_headload_cnt4: FTCPE port map (headload_cnt(4),headload_cnt_T(4),CLK8M,'0','0');
headload_cnt_T(4) <= ((NOT nRST)
	OR (headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (headload_cnt(3))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_headload_cnt5: FTCPE port map (headload_cnt(5),headload_cnt_T(5),CLK8M,'0','0');
headload_cnt_T(5) <= ((headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (headload_cnt(3))
	OR (headload_cnt(4))
	OR (NOT nRST)
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND 
	NOT headload_cnt(19)));

FTCPE_headload_cnt6: FTCPE port map (headload_cnt(6),headload_cnt_T(6),CLK8M,'0','0');
headload_cnt_T(6) <= ((headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (headload_cnt(3))
	OR (headload_cnt(4))
	OR (NOT nRST)
	OR (headload_cnt(5))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_headload_cnt7: FTCPE port map (headload_cnt(7),headload_cnt_T(7),CLK8M,'0','0');
headload_cnt_T(7) <= ((headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (headload_cnt(3))
	OR (headload_cnt(4))
	OR (NOT nRST)
	OR (headload_cnt(5))
	OR (headload_cnt(6))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND NOT headload_cnt(19)));

FTCPE_headload_cnt8: FTCPE port map (headload_cnt(8),headload_cnt_T(8),CLK8M,'0','0');
headload_cnt_T(8) <= ((headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (headload_cnt(3))
	OR (headload_cnt(4))
	OR (NOT nRST)
	OR (headload_cnt(5))
	OR (headload_cnt(6))
	OR (headload_cnt(7))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND 
	NOT headload_cnt(19)));

FTCPE_headload_cnt9: FTCPE port map (headload_cnt(9),headload_cnt_T(9),CLK8M,'0','0');
headload_cnt_T(9) <= ((headload_cnt(0))
	OR (headload_cnt(1))
	OR (headload_cnt(2))
	OR (headload_cnt(3))
	OR (headload_cnt(4))
	OR (NOT nRST)
	OR (headload_cnt(8))
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(9) AND NOT headload_cnt(19) AND NOT HLD)
	OR (NOT headload_cnt(10) AND NOT headload_cnt(11) AND 
	NOT headload_cnt(12) AND NOT headload_cnt(13) AND NOT headload_cnt(14) AND 
	NOT headload_cnt(15) AND NOT headload_cnt(16) AND NOT headload_cnt(17) AND 
	NOT headload_cnt(18) AND NOT headload_cnt(9) AND NOT headload_cnt(19) AND s_HLDFLG)
	OR (headload_cnt(5))
	OR (headload_cnt(6))
	OR (headload_cnt(7)));

FTCPE_headload_cnt10: FTCPE port map (headload_cnt(10),headload_cnt_T(10),CLK8M,'0','0');
headload_cnt_T(10) <= ((nRST AND NOT headload_cnt(0) AND headload_cnt(10) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(11) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(13) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(14) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(16) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND HLD AND NOT s_HLDFLG)
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(12) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(15) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(17) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND headload_cnt(18) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND headload_cnt(19)));

FTCPE_headload_cnt11: FTCPE port map (headload_cnt(11),headload_cnt_T(11),CLK8M,'0','0');
headload_cnt_T(11) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(11) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(12) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(13) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(14) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(16) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(15) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(17) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	headload_cnt(18) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND 
	headload_cnt(19)));

FTCPE_headload_cnt12: FTCPE port map (headload_cnt(12),headload_cnt_T(12),CLK8M,'0','0');
headload_cnt_T(12) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(13) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(14) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(16) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(12) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(15) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(17) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND headload_cnt(19)));

FTCPE_headload_cnt13: FTCPE port map (headload_cnt(13),headload_cnt_T(13),CLK8M,'0','0');
headload_cnt_T(13) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND headload_cnt(14) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND headload_cnt(16) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND HLD AND NOT s_HLDFLG)
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND headload_cnt(13) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND headload_cnt(15) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND headload_cnt(17) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND headload_cnt(18) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND headload_cnt(19)));

FTCPE_headload_cnt14: FTCPE port map (headload_cnt(14),headload_cnt_T(14),CLK8M,'0','0');
headload_cnt_T(14) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	headload_cnt(16) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	headload_cnt(14) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	headload_cnt(15) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	headload_cnt(17) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	headload_cnt(18) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND 
	headload_cnt(19)));

FTCPE_headload_cnt15: FTCPE port map (headload_cnt(15),headload_cnt_T(15),CLK8M,'0','0');
headload_cnt_T(15) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND headload_cnt(16) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND HLD AND NOT s_HLDFLG)
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND headload_cnt(15) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND headload_cnt(17) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND headload_cnt(19)));

FTCPE_headload_cnt16: FTCPE port map (headload_cnt(16),headload_cnt_T(16),CLK8M,'0','0');
headload_cnt_T(16) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND headload_cnt(16) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND headload_cnt(17) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND headload_cnt(18) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND headload_cnt(19)));

FTCPE_headload_cnt17: FTCPE port map (headload_cnt(17),headload_cnt_T(17),CLK8M,'0','0');
headload_cnt_T(17) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	headload_cnt(17) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	headload_cnt(18) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND 
	headload_cnt(19))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(1) AND NOT headload_cnt(2) AND NOT headload_cnt(3) AND 
	NOT headload_cnt(4) AND NOT headload_cnt(5) AND NOT headload_cnt(6) AND 
	NOT headload_cnt(7) AND NOT headload_cnt(8) AND NOT headload_cnt(9) AND HLD AND 
	NOT s_HLDFLG));

FTCPE_headload_cnt18: FTCPE port map (headload_cnt(18),headload_cnt_T(18),CLK8M,'0','0');
headload_cnt_T(18) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND headload_cnt(19))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND NOT headload_cnt(1) AND NOT headload_cnt(2) AND 
	NOT headload_cnt(3) AND NOT headload_cnt(4) AND NOT headload_cnt(5) AND 
	NOT headload_cnt(6) AND NOT headload_cnt(7) AND NOT headload_cnt(8) AND 
	NOT headload_cnt(9) AND HLD AND NOT s_HLDFLG));

FTCPE_headload_cnt19: FTCPE port map (headload_cnt(19),headload_cnt_T(19),CLK8M,'0','0');
headload_cnt_T(19) <= ((nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND NOT headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND headload_cnt(19))
	OR (nRST AND NOT headload_cnt(0) AND NOT headload_cnt(10) AND 
	NOT headload_cnt(11) AND NOT headload_cnt(12) AND NOT headload_cnt(13) AND 
	NOT headload_cnt(14) AND NOT headload_cnt(15) AND NOT headload_cnt(16) AND 
	NOT headload_cnt(17) AND NOT headload_cnt(18) AND NOT headload_cnt(1) AND 
	NOT headload_cnt(2) AND NOT headload_cnt(3) AND NOT headload_cnt(4) AND 
	NOT headload_cnt(5) AND NOT headload_cnt(6) AND NOT headload_cnt(7) AND 
	NOT headload_cnt(8) AND NOT headload_cnt(9) AND HLD AND NOT s_HLDFLG));

FTCPE_motor_cnt0: FTCPE port map (motor_cnt(0),motor_cnt_T(0),CLK8M,'0','0');
motor_cnt_T(0) <= ((nRST AND nCE0 AND motor_cnt(0) AND NOT s_CLKSTAT AND CLK1)
	OR (nRST AND motor_cnt(0) AND NOT s_CLKSTAT AND NOT E AND CLK1)
	OR (nRST AND NOT nCE0 AND NOT motor_cnt(0) AND E)
	OR (nRST AND NOT motor_cnt(0) AND motor_cnt(1) AND NOT s_CLKSTAT AND 
	CLK1)
	OR (nRST AND NOT motor_cnt(0) AND motor_cnt(2) AND NOT s_CLKSTAT AND 
	CLK1)
	OR (nRST AND NOT motor_cnt(0) AND motor_cnt(3) AND NOT s_CLKSTAT AND 
	CLK1)
	OR (nRST AND NOT motor_cnt(0) AND motor_cnt(4) AND NOT s_CLKSTAT AND 
	CLK1));

FTCPE_motor_cnt1: FTCPE port map (motor_cnt(1),motor_cnt_T(1),CLK8M,'0','0');
motor_cnt_T(1) <= ((nRST AND nCE0 AND NOT motor_cnt(0) AND motor_cnt(1) AND 
	NOT s_CLKSTAT AND CLK1)
	OR (nRST AND NOT nCE0 AND NOT motor_cnt(1) AND E)
	OR (nRST AND NOT motor_cnt(0) AND motor_cnt(1) AND NOT s_CLKSTAT AND 
	NOT E AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	motor_cnt(2) AND NOT s_CLKSTAT AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	motor_cnt(3) AND NOT s_CLKSTAT AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	motor_cnt(4) AND NOT s_CLKSTAT AND CLK1));

FTCPE_motor_cnt2: FTCPE port map (motor_cnt(2),motor_cnt_T(2),CLK8M,'0','0');
motor_cnt_T(2) <= ((nRST AND NOT nCE0 AND NOT motor_cnt(2) AND E)
	OR (nRST AND nCE0 AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	motor_cnt(2) AND NOT s_CLKSTAT AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	motor_cnt(2) AND NOT s_CLKSTAT AND NOT E AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND motor_cnt(3) AND NOT s_CLKSTAT AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND motor_cnt(4) AND NOT s_CLKSTAT AND CLK1));

FTCPE_motor_cnt3: FTCPE port map (motor_cnt(3),motor_cnt_T(3),CLK8M,'0','0');
motor_cnt_T(3) <= ((nRST AND NOT nCE0 AND NOT motor_cnt(3) AND E)
	OR (nRST AND nCE0 AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND motor_cnt(3) AND NOT s_CLKSTAT AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND motor_cnt(3) AND NOT s_CLKSTAT AND NOT E AND CLK1)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND NOT motor_cnt(3) AND motor_cnt(4) AND NOT s_CLKSTAT AND CLK1));

FTCPE_motor_cnt4: FTCPE port map (motor_cnt(4),motor_cnt_T(4),CLK8M,'0','0');
motor_cnt_T(4) <= ((nRST AND NOT nCE0 AND motor_cnt(4) AND E)
	OR (nRST AND NOT motor_cnt(0) AND NOT motor_cnt(1) AND 
	NOT motor_cnt(2) AND NOT motor_cnt(3) AND motor_cnt(4) AND NOT s_CLKSTAT AND CLK1));


nDDEN <= NOT SSO;


nDOE <= NOT ((A3 AND NOT nCE0 AND E));


nDSEN <= NOT ((MOTCP AND NOT s_DSEN));


nINT <= NOT ((NOT A3 AND RW AND NOT nCE0 AND E));


nNMI <= NOT ((NOT A3 AND NOT RW AND NOT nCE0));

FTCPE_nSIDE1: FTCPE port map (nSIDE1,nSIDE1_T,NOT E,'0','0');
nSIDE1_T <= ((NOT nRST AND nSIDE1)
	OR (NOT A3 AND NOT RW AND NOT nCE0 AND nSIDE1 AND NOT D(6).PIN)
	OR (nRST AND NOT A3 AND NOT RW AND NOT nCE0 AND NOT nSIDE1 AND D(6).PIN));

FDCPE_s_CLKSTAT: FDCPE port map (s_CLKSTAT,s_CLKSTAT_D,CLK8M,'0','0');
s_CLKSTAT_D <= ((nRST AND NOT CLK1)
	OR (NOT nRST AND NOT s_CLKSTAT));

FTCPE_s_DSEN: FTCPE port map (s_DSEN,s_DSEN_T,NOT E,'0','0');
s_DSEN_T <= ((NOT nRST AND NOT s_DSEN)
	OR (NOT A3 AND NOT RW AND NOT nCE0 AND NOT s_DSEN AND D(7).PIN)
	OR (nRST AND NOT A3 AND NOT RW AND NOT nCE0 AND s_DSEN AND NOT D(7).PIN));

FDCPE_s_HLDFLG: FDCPE port map (s_HLDFLG,s_HLDFLG_D,CLK8M,'0','0');
s_HLDFLG_D <= ((nRST AND HLD)
	OR (NOT nRST AND s_HLDFLG));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC9572XL-10-VQ44


   --------------------------------  
  /44 43 42 41 40 39 38 37 36 35 34 \
 | 1                             33 | 
 | 2                             32 | 
 | 3                             31 | 
 | 4                             30 | 
 | 5        XC9572XL-10-VQ44     29 | 
 | 6                             28 | 
 | 7                             27 | 
 | 8                             26 | 
 | 9                             25 | 
 | 10                            24 | 
 | 11                            23 | 
 \ 12 13 14 15 16 17 18 19 20 21 22 /
   --------------------------------  


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 nNMI                             23 FDCCLK                        
  2 nINT                             24 TDO                           
  3 KPR                              25 GND                           
  4 GND                              26 VCC                           
  5 nDSEN                            27 nCE0                          
  6 DSA                              28 RW                            
  7 DSB                              29 D<7>                          
  8 nSIDE1                           30 D<6>                          
  9 TDI                              31 D<5>                          
 10 TMS                              32 D<4>                          
 11 TCK                              33 D<3>                          
 12 MOTCP                            34 D<2>                          
 13 KPR                              35 VCC                           
 14 nINTRQ                           36 D<1>                          
 15 VCC                              37 D<0>                          
 16 DRQ                              38 E                             
 17 GND                              39 A3                            
 18 nDDEN                            40 nRST                          
 19 KPR                              41 HLD                           
 20 KPR                              42 nDOE                          
 21 CLK1                             43 CLK8M                         
 22 HLT                              44 SSO                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : XC9572XL-10-VQ44
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 25
